import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.222b9ad1.js";
const __pageData = JSON.parse('{"title":"\u4ECB\u7ECD","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u8BED\u6CD5","slug":"\u8BED\u6CD5","link":"#\u8BED\u6CD5","children":[]},{"level":2,"title":"\u793A\u4F8B","slug":"\u793A\u4F8B","link":"#\u793A\u4F8B","children":[{"level":3,"title":"\u793A\u4F8B1\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0Fx -> x is not null","slug":"\u793A\u4F8B1-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-x-is-not-null","link":"#\u793A\u4F8B1-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-x-is-not-null","children":[]},{"level":3,"title":"\u793A\u4F8B2\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F0, (s, x) -> s + x, s -> s","slug":"\u793A\u4F8B2-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F0-s-x-s-x-s-s","link":"#\u793A\u4F8B2-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F0-s-x-s-x-s-s","children":[]},{"level":3,"title":"\u793A\u4F8B3\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F(k,v) -> v > 10","slug":"\u793A\u4F8B3-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-k-v-v-10","link":"#\u793A\u4F8B3-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-k-v-v-10","children":[]},{"level":3,"title":"\u793A\u4F8B4\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F(x, y) -> (y, x)","slug":"\u793A\u4F8B4-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-x-y-y-x","link":"#\u793A\u4F8B4-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-x-y-y-x","children":[]},{"level":3,"title":"\u793A\u4F8B5\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0Fx -> coalesce(x, 0) + 1","slug":"\u793A\u4F8B5-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-coalesce-x-0-1","link":"#\u793A\u4F8B5-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-coalesce-x-0-1","children":[]},{"level":3,"title":"\u5176\u4ED6\u793A\u4F8B","slug":"\u5176\u4ED6\u793A\u4F8B","link":"#\u5176\u4ED6\u793A\u4F8B","children":[]}]}],"relativePath":"sqlfun/28Lambda\u8868\u8FBE\u5F0F\uFF08\u5F85\u5904\u7406\uFF09.md"}');
const _sfc_main = { name: "sqlfun/28Lambda\u8868\u8FBE\u5F0F\uFF08\u5F85\u5904\u7406\uFF09.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="\u4ECB\u7ECD" tabindex="-1">\u4ECB\u7ECD <a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a></h1><p>\u65E5\u5FD7\u670D\u52A1\u652F\u6301\u60A8\u5728SQL\u5206\u6790\u8BED\u53E5\u4E2D\u5B9A\u4E49Lambda\u8868\u8FBE\u5F0F\uFF0C\u5E76\u5C06\u8BE5\u8868\u8FBE\u5F0F\u4F20\u9012\u7ED9\u6307\u5B9A\u51FD\u6570\uFF0C\u4E30\u5BCC\u51FD\u6570\u7684\u8868\u8FBE\u3002\u672C\u6587\u4ECB\u7ECDLambda\u8868\u8FBE\u5F0F\u7684\u57FA\u672C\u8BED\u6CD5\u53CA\u793A\u4F8B\u3002</p><h1 id="\u51FD\u6570\u793A\u4F8B" tabindex="-1">\u51FD\u6570\u793A\u4F8B <a class="header-anchor" href="#\u51FD\u6570\u793A\u4F8B" aria-hidden="true">#</a></h1><h2 id="\u8BED\u6CD5" tabindex="-1">\u8BED\u6CD5 <a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a></h2><p>Lambda\u8868\u8FBE\u5F0F\u9700\u4E0E\u51FD\u6570\u4E00\u8D77\u4F7F\u7528\uFF0C\u4F8B\u5982<a href="#%E7%A4%BA%E4%BE%8B1%EF%BC%9A%E4%BD%BF%E7%94%A8lambda%E8%A1%A8%E8%BE%BE%E5%BC%8Fx---x-is-not-null">filter\u51FD\u6570</a>\u3001<a href="#%E7%A4%BA%E4%BE%8B2%EF%BC%9A%E4%BD%BF%E7%94%A8lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F0-s-x---s--x-s---s">reduce\u51FD\u6570</a>\u3001<a href="#%E7%A4%BA%E4%BE%8B3%EF%BC%9A%E4%BD%BF%E7%94%A8lambda%E8%A1%A8%E8%BE%BE%E5%BC%8Fkv---v--10">transform\u51FD\u6570</a>\u3001<a href="#%E7%A4%BA%E4%BE%8B4%EF%BC%9A%E4%BD%BF%E7%94%A8lambda%E8%A1%A8%E8%BE%BE%E5%BC%8Fx-y---y-x">zip_with\u51FD\u6570</a>\u3001<a href="#%E7%A4%BA%E4%BE%8B5%EF%BC%9A%E4%BD%BF%E7%94%A8lambda%E8%A1%A8%E8%BE%BE%E5%BC%8Fx---coalescex-0--1">map_filter\u51FD\u6570</a>\u3002Lambda\u8868\u8FBE\u5F0F\u7684\u8BED\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">parameter </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> expression</span></span>\n<span class="line"></span></code></pre></div><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td><em>parameter</em></td><td>\u7528\u4E8E\u4F20\u9012\u53C2\u6570\u7684\u6807\u8BC6\u7B26\u3002</td></tr><tr><td><em>expression</em></td><td>\u8868\u8FBE\u5F0F\uFF0C\u5927\u591A\u6570\u7684MySQL\u8868\u8FBE\u5F0F\u90FD\u53EF\u4EE5\u5728Lambda\u8868\u8FBE\u5F0F\u4F7F\u7528\u3002\u4F8B\u5982\uFF1A <code>sql x -&gt; x + 1 (x, y) -&gt; x + y x -&gt; regexp_like(x, &#39;a+&#39;) x -&gt; x[1] / x[2] x -&gt; if(x &gt; 0, x, -x) x -&gt; coalesce(x, 0) x -&gt; cast(x AS JSON) x -&gt; x + try(1 / 0) </code></td></tr></tbody></table><h2 id="\u793A\u4F8B" tabindex="-1">\u793A\u4F8B <a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a></h2><h3 id="\u793A\u4F8B1-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-x-is-not-null" tabindex="-1">\u793A\u4F8B1\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0Fx -&gt; x is not null <a class="header-anchor" href="#\u793A\u4F8B1-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-x-is-not-null" aria-hidden="true">#</a></h3><p>\u8FD4\u56DE\u6570\u7EC4[5, null, 7, null]\u4E2D\u975Enull\u7684\u5143\u7D20\u3002</p><ul><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u8BED\u53E5</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">filter</span><span style="color:#A6ACCD;">(array[5, null, 7, null], x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> x </span><span style="color:#F78C6C;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">null</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div></li><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u7ED3\u679C</p><p><img src="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/0866388261/p303951.png" alt="filter\u51FD\u6570"></p></li></ul><h3 id="\u793A\u4F8B2-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F0-s-x-s-x-s-s" tabindex="-1">\u793A\u4F8B2\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F0, (s, x) -&gt; s + x, s -&gt; s <a class="header-anchor" href="#\u793A\u4F8B2-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F0-s-x-s-x-s-s" aria-hidden="true">#</a></h3><p>\u8FD4\u56DE\u6570\u7EC4[5, 20, 50]\u4E2D\u5404\u4E2A\u5143\u7D20\u76F8\u52A0\u7684\u7ED3\u679C\u3002</p><ul><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u8BED\u53E5</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> reduce(array[5, 20, 50], </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">, (s, x) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> x, s </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> s)</span></span>\n<span class="line"></span></code></pre></div></li><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u7ED3\u679C</p><p><img src="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/5229378261/p303133.png" alt="reduce"></p></li></ul><h3 id="\u793A\u4F8B3-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-k-v-v-10" tabindex="-1">\u793A\u4F8B3\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F(k,v) -&gt; v &gt; 10 <a class="header-anchor" href="#\u793A\u4F8B3-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-k-v-v-10" aria-hidden="true">#</a></h3><p>\u5C06\u4E24\u4E2A\u6570\u7EC4\u6620\u5C04\u4E3A\u4E00\u4E2AMap\u4E14Map\u4E2D\u7684\u952E\u503C\u5927\u4E8E10\u3002</p><ul><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u8BED\u53E5</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> map_filter(map(array[&#39;class01&#39;, &#39;class02&#39;, &#39;class03&#39;], array[11, 10, 9]), (k,v) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> v </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div></li><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u7ED3\u679C</p><p><img src="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/0866388261/p303952.png" alt="map_filter"></p></li></ul><h3 id="\u793A\u4F8B4-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-x-y-y-x" tabindex="-1">\u793A\u4F8B4\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F(x, y) -&gt; (y, x) <a class="header-anchor" href="#\u793A\u4F8B4-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F-x-y-y-x" aria-hidden="true">#</a></h3><p>\u5C06\u5BF9\u6362\u4E24\u4E2A\u6570\u7EC4\u7684\u5143\u7D20\u4F4D\u7F6E\uFF0C\u7136\u540E\u63D0\u53D6\u6570\u7EC4\u4E2D\u7D22\u5F15\u76F8\u540C\u7684\u5143\u7D20\u7EC4\u6210\u4E00\u4E2A\u65B0\u7684\u4E8C\u7EF4\u6570\u7EC4\u3002</p><ul><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u8BED\u53E5</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> zip_with(array[1, 3, 5], array[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], (x, y) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (y, x))</span></span>\n<span class="line"></span></code></pre></div></li><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u7ED3\u679C</p><p><img src="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/0866388261/p303967.png" alt="zip_with"></p></li></ul><h3 id="\u793A\u4F8B5-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-coalesce-x-0-1" tabindex="-1">\u793A\u4F8B5\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0Fx -&gt; coalesce(x, 0) + 1 <a class="header-anchor" href="#\u793A\u4F8B5-\u4F7F\u7528lambda\u8868\u8FBE\u5F0Fx-coalesce-x-0-1" aria-hidden="true">#</a></h3><p>\u5C06\u6570\u7EC4[5, NULL, 6]\u4E2D\u7684\u5404\u4E2A\u5143\u7D20\u52A01\uFF0C\u7136\u540E\u8FD4\u56DE\u3002\u5982\u679C\u6570\u7EC4\u4E2D\u5305\u542Bnull\u5143\u7D20\uFF0C\u5219\u8F6C\u6362\u4E3A0\uFF0C\u518D\u52A01\u3002</p><ul><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u8BED\u53E5</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> transform(array[5, NULL, 6], x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">coalesce</span><span style="color:#A6ACCD;">(x, </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div></li><li><p>\u67E5\u8BE2\u548C\u5206\u6790\u7ED3\u679C<img src="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/0866388261/p303968.png" alt="transform"></p></li></ul><h3 id="\u5176\u4ED6\u793A\u4F8B" tabindex="-1">\u5176\u4ED6\u793A\u4F8B <a class="header-anchor" href="#\u5176\u4ED6\u793A\u4F8B" aria-hidden="true">#</a></h3><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">filter</span><span style="color:#A6ACCD;">(array[], x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> true)</span></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> map_filter(map(array[],array[]), (k, v) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> true)</span></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> reduce(array[5, 6, 10, 20], </span><span style="color:#676E95;">-- calculates arithmetic average: 10.25</span></span>\n<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#82AAFF;">cast</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">row</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">row</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#A6ACCD;"> double, </span><span style="color:#82AAFF;">count</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">integer</span><span style="color:#A6ACCD;">)),</span></span>\n<span class="line"><span style="color:#A6ACCD;">              (s, x) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">row</span><span style="color:#A6ACCD;">(x </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> s.sum, s.count </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">row</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#A6ACCD;"> double, </span><span style="color:#82AAFF;">count</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">integer</span><span style="color:#A6ACCD;">)),</span></span>\n<span class="line"><span style="color:#A6ACCD;">              s </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">if</span><span style="color:#A6ACCD;">(s.count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">null</span><span style="color:#A6ACCD;">, s.sum </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> s.count))</span></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> reduce(array[2147483647, 1], </span><span style="color:#82AAFF;">cast</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">bigint</span><span style="color:#A6ACCD;">), (s, x) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> x, s </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> s)</span></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> reduce(array[5, 20, null, 50], </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">, (s, x) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> x, s </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> s)</span></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> transform(array[array[1, null, 2], array[3, null]], a </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">filter</span><span style="color:#A6ACCD;">(a, x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> x </span><span style="color:#F78C6C;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">null</span><span style="color:#A6ACCD;">))</span></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> | </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> zip_with(array[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], array[&#39;d&#39;, &#39;e&#39;, &#39;f&#39;], (x, y) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">(x, y))</span></span>\n<span class="line"></span></code></pre></div>', 25);
const _hoisted_26 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_26);
}
const _28Lambda________ = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  _28Lambda________ as default
};
